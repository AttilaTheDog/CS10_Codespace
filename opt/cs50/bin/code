#!/bin/bash

# Function to prompt for user confirmation
function confirm_action {
    read -p "$1 [y/N] " -r
    if [[ ! "${REPLY,,}" =~ ^y|yes$ ]]; then
        exit 1
    fi
}

# Check whether run with any options
has_options=false
for arg in "$@"; do
    if [[ "$arg" =~ ^- ]]; then
        has_options=true
        break
    fi
done

# If not run with any options, handle actions
if [ "$has_options" = false ]; then

    # If no arguments provided
    if [ $# -eq 0 ]; then
        confirm_action "Are you sure you want to run $(tput bold)code$(tput sgr0) without a filename? It would open a new tab."
        # Open same workspace in a new tab, to avoid ?ew=true
        set -- "$CODESPACE_VSCODE_FOLDER"
    fi

    # For each file
    for arg in "$@"; do
        if [ -d "$arg" ]; then
            confirm_action "Are you sure you want to open $(tput bold)$arg$(tput sgr0)? It's a folder, not a file, so it would open in a new tab."
        fi

        if [ ! -f "$arg" ]; then
            if [[ "$arg" =~ ^[A-Z].*\.(c|css|html|js|py)$ ]]; then
                confirm_action "Are you sure you want to create $(tput bold)$arg$(tput sgr0)? Filenames aren't usually capitalized."
            fi

            if [[ "$arg" =~ ^[a-z].*\.java$ ]]; then
                confirm_action "Are you sure you want to create $(tput bold)$arg$(tput sgr0)? Filenames are usually capitalized."
            fi

            if [[ "$arg" =~ \.[A-Z]+$ ]]; then
                confirm_action "Are you sure you want to create $(tput bold)$arg$(tput sgr0)? File extensions aren't usually capitalized."
            fi

            # Ensure files created with `code` are autosaved too,
            # touching access time instead of modification time, so that `make` doesn't think the file has changed
            touch -a "$arg" 2> /dev/null
        fi
    done
fi

# Launch Visual Studio Code or Visual Studio Code Insiders with the provided arguments
$(which -a code | grep remote-cli) "$@" || $(which -a code-insiders | grep remote-cli) "$@"
